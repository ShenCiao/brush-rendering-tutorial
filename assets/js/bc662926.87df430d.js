"use strict";(self.webpackChunkbrush_stroke_tutorial=self.webpackChunkbrush_stroke_tutorial||[]).push([[805],{5034:(e,t,n)=>{n.d(t,{r:()=>l});var a=n(7462),s=n(7294);const r={comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"[",close:"]"},{open:"{",close:"}"},{open:"(",close:")"},{open:"'",close:"'",notIn:["string","comment"]},{open:'"',close:'"',notIn:["string"]}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}]},i={tokenPostfix:".glsl",defaultToken:"invalid",keywords:["const","uniform","break","continue","do","for","while","if","else","switch","case","in","out","inout","true","false","invariant","discard","return","sampler2D","samplerCube","sampler3D","struct","radians","degrees","sin","cos","tan","asin","acos","atan","pow","sinh","cosh","tanh","asinh","acosh","atanh","exp","log","exp2","log2","sqrt","inversesqrt","abs","sign","floor","ceil","round","roundEven","trunc","fract","mod","modf","min","max","clamp","mix","step","smoothstep","length","distance","dot","cross ","determinant","inverse","normalize","faceforward","reflect","refract","matrixCompMult","outerProduct","transpose","lessThan ","lessThanEqual","greaterThan","greaterThanEqual","equal","notEqual","any","all","not","packUnorm2x16","unpackUnorm2x16","packSnorm2x16","unpackSnorm2x16","packHalf2x16","unpackHalf2x16","dFdx","dFdy","fwidth","textureSize","texture","textureProj","textureLod","textureGrad","texelFetch","texelFetchOffset","textureProjLod","textureLodOffset","textureGradOffset","textureProjLodOffset","textureProjGrad","intBitsToFloat","uintBitsToFloat","floatBitsToInt","floatBitsToUint","isnan","isinf","vec2","vec3","vec4","ivec2","ivec3","ivec4","uvec2","uvec3","uvec4","bvec2","bvec3","bvec4","mat2","mat3","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","mat4","float","int","uint","void","bool"],operators:["=",">","<","!","~","?",":","==","<=",">=","!=","&&","||","++","--","+","-","*","/","&","|","^","%","<<",">>",">>>","+=","-=","*=","/=","&=","|=","^=","%=","<<=",">>=",">>>="],symbols:/[=><!~?:&|+\-*\/\^%]+/,escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,integersuffix:/([uU](ll|LL|l|L)|(ll|LL|l|L)?[uU]?)/,floatsuffix:/[fFlL]?/,encoding:/u|u8|U|L/,tokenizer:{root:[[/[a-zA-Z_]\w*/,{cases:{"@keywords":{token:"keyword.$0"},"@default":"identifier"}}],[/^\s*#\s*\w+/,"keyword.directive"],{include:"@whitespace"},[/[{}()\[\]]/,"@brackets"],[/@symbols/,{cases:{"@operators":"operator","@default":""}}],[/\d*\d+[eE]([\-+]?\d+)?(@floatsuffix)/,"number.float"],[/\d*\.\d+([eE][\-+]?\d+)?(@floatsuffix)/,"number.float"],[/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/,"number.hex"],[/0[0-7']*[0-7](@integersuffix)/,"number.octal"],[/0[bB][0-1']*[0-1](@integersuffix)/,"number.binary"],[/\d[\d']*\d(@integersuffix)/,"number"],[/\d(@integersuffix)/,"number"],[/[;,.]/,"delimiter"]],comment:[[/[^\/*]+/,"comment"],[/\/\*/,"comment","@push"],["\\*/","comment","@pop"],[/[\/*]/,"comment"]],string:[[/[^\\"]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"/,{token:"string.quote",bracket:"@close",next:"@pop"}]],whitespace:[[/[ \t\r\n]+/,"white"],[/\/\*/,"comment","@comment"],[/\/\/.*$/,"comment"]]}};var o=n(3764);function l(e){return s.createElement(o.ML,(0,a.Z)({},e,{defaultLanguage:"glsl",onMount:(t,n)=>{n.languages.register({id:"glsl"}),n.languages.setMonarchTokensProvider("glsl",i),n.languages.setLanguageConfiguration("glsl",r),"function"==typeof e.onMount&&e.onMount(t,n)}}))}},9279:(e,t,n)=>{n.d(t,{Z:()=>a});const a="// Generate sinewave geometry \nconst maxRadius = 1/3;\nconst segmentCount = 32;\n\nconst position = [];\nconst radius = [];\n\nconst gr = (1 + Math.sqrt(5)) / 2; // golden ratio\nconst pi = Math.PI;\n\nfor(let i = 0; i <= segmentCount; ++i){\n  let a = i / segmentCount\n  let x =  -pi + (2 * pi * a);\n  let y = Math.sin(x) / gr;\n  let r = Math.cos(x / 2.0) * maxRadius;\n\n  position.push(x, y);\n  radius.push(r);\n}\n\nreturn [position, radius];\n"},8089:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>w,contentTitle:()=>v,default:()=>L,frontMatter:()=>k,metadata:()=>N,toc:()=>x});var a=n(7462),s=n(7294),r=n(3905),i=n(9477),o=n(5452),l=n(4866),m=n(5162),c=n(3764),p=n(5034);function u(e){let{geometry:t,vertexShader:n,fragmentShader:a,showEditor:r=null}=e;const u=(0,s.useRef)(),d=(0,s.useRef)(),g=(0,s.useRef)(),h=(0,s.useRef)();function f(e,t,n){const a=[...t],s=[...t.slice(2)],r=[...n],o=[...n.slice(1)],l=[];let m=0;for(let u=0;u<n.length-1;++u){const e=2*u,a=new i.FM8(t[e],t[e+1]),s=new i.FM8(t[e+2],t[e+3]);let c=n[u],p=n[u+1];const d=1e-5;(c<=0||c/p<d)&&(c=d*p,r[u]=c),(p<=0||p/c<d)&&(p=d*c,o[u]=p);let g=a.distanceTo(s);m+=c<=0&&p<=0?0:c==p?g/c:Math.log(c/p)/(c-p)*g,l.push(m)}const c=[0,...l],p=[...l];e.setAttribute("position0",new i.lb7(new Float32Array(a),2)),e.setAttribute("radius0",new i.lb7(new Float32Array(r),1)),e.setAttribute("position1",new i.lb7(new Float32Array(s),2)),e.setAttribute("radius1",new i.lb7(new Float32Array(o),1)),e.setAttribute("summedLength0",new i.lb7(new Float32Array(c),1)),e.setAttribute("summedLength1",new i.lb7(new Float32Array(p),1))}function k(e,t){const n=g.current.material;e&&(n.vertexShader=e),t&&(n.fragmentShader=t),n.needsUpdate=!0,d.current()}(0,s.useEffect)((()=>{const e=(1+Math.sqrt(5))/2,s=u.current.clientWidth,r=s*(.5/e),l=6*e,m=l*(.5/e),c=new i.iKG(l/-2,l/2,m/2,m/-2,-1e3,1e3);c.position.z=5;const p=new i.CP7({preserveDrawingBuffer:!0,powerPreference:"high-performance",antialias:!0,alpha:!0,premultipliedAlpha:!1});function k(){const t=u.current.clientWidth,n=.5*t/e;p.setSize(t,n)}p.setClearColor(new i.Ilk(1,1,1),0),p.setSize(s,r),h.current=p,window.addEventListener("resize",k),u.current.appendChild(p.domElement);const v=new i.xsS,N=new o.o(c,p.domElement);N.enableRotate=!1,N.enableDamping=!1,N.screenSpacePanning=!0,N.addEventListener("change",(()=>{p.render(v,c)})),d.current=()=>p.render(v,c),window.addEventListener("TextureLoaded",d.current);let w=new i.u9r;if("string"==typeof t){const e=[0,1,2,2,3,0];w.setIndex(e);const n=new Function(t),[a,s]=n();f(w,a,s)}else{if(!(t instanceof i.u9r))return void console.error("Unrecognized geometry input: "+typeof t);w=t}const x=new i.FIo({vertexShader:n,fragmentShader:a,side:i.ehD,transparent:!0,glslVersion:i.LSk});return g.current=new i.SPe(w,x,w.getAttribute("position0").count-1),g.current.frustumCulled=!1,v.add(g.current),d.current(),()=>{p.dispose(),window.removeEventListener("resize",k),window.removeEventListener("TextureLoaded",d.current)}}),[]);const v=(0,s.useCallback)(((e,t)=>{let n=[],a=[];try{const t=new Function(e);[n,a]=t()}catch(r){return void console.log(r.toString())}function s(e){if(Array.isArray(e)){for(let t=0;t<e.length;t++)if("number"!=typeof e[t])return!1;return!0}return!1}s(n)&&s(a)&&n.length==2*a.length?(f(g.current.geometry,n,a),g.current.count=n.length-1,d.current()):console.error("return value is not correct")}),[]),N="40vh";let w=!0,x=!0,b=!0;return Array.isArray(r)&&([w,x,b]=r),t instanceof i.u9r&&(w=!1),s.createElement(s.Fragment,null,s.createElement("div",{style:{display:r?null:"none"}},s.createElement(l.Z,{defaultValue:""},w&&s.createElement(m.Z,{value:"geometry.js"},s.createElement(c.ZP,{height:N,defaultLanguage:"javascript",defaultValue:t,onChange:v})),x&&s.createElement(m.Z,{value:"vertex.glsl"},s.createElement(p.r,{height:N,defaultValue:n,onChange:e=>{k(e,"")}})),b&&s.createElement(m.Z,{value:"fragment.glsl"},s.createElement(p.r,{height:N,defaultValue:a,onChange:e=>{k("",e)}})))),s.createElement("div",{ref:u,style:{width:"100%"},onMouseDown:e=>{e.preventDefault(),2==e.button&&console.log(h.current.domElement.toDataURL())}}))}var d=n(9279);const g="precision mediump float;\nprecision mediump int;\n\n// Take golbal const values as uniforms to modify freely.\nconst float radius = 1.0/2.0;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix; // orthogonal projection\n\nin vec2 position0;\nin vec2 position1;\n\nout vec2 p;\nflat out vec2 p0;\nflat out vec2 p1;\nflat out float r;\n\nvoid main(){\n    p0 = position0;\n    p1 = position1;\n    r = radius;\n\n    vec2 tangent = normalize(p1 - p0);\n    vec2 normal = vec2(-tangent.y, tangent.x);\n\n    vec2 offsetSign = vec2[](\n        vec2(-1.0, -1.0),\n        vec2(-1.0, 1.0),\n        vec2(1.0, 1.0),\n        vec2(1.0, -1.0)\n    )[gl_VertexID];\n    vec2 position = vec2[](p0, p0, p1, p1)[gl_VertexID];\n    vec2 vertexPosition = position +\n        offsetSign.x * r * tangent +\n        offsetSign.y * r * normal;\n\n    p = vertexPosition;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(p, 0.0, 1.0);\n}",h="precision mediump float;\nprecision mediump int;\n\n// Take golbal const values as uniforms to modify freely.\nconst vec4 color = vec4(0.0, 0.0, 0.0, 1.0);\n\nout vec4 outColor;\n\nin vec2 p;\nflat in vec2 p0;\nflat in vec2 p1;\nflat in float r;\n\nvoid main() {\n    vec2 tangent = normalize(p1 - p0);\n    vec2 normal = vec2(-tangent.y, tangent.x);\n\n    float len = distance(p1, p0);\n    vec2 pLocal = vec2(dot(p-p0, tangent), dot(p-p0, normal));\n\n    float d0 = distance(p, p0);\n    float d1 = distance(p, p1);\n\n    // Remove corners\n    if(pLocal.x < 0.0 && d0 > r) discard;\n    if(pLocal.x > len && d1 > r) discard;\n\n    outColor = color;\n}";function f(e){return void 0===e&&(e=!1),s.createElement(u,{geometry:d.Z,vertexShader:g,fragmentShader:h,showEditor:!1})}const k={sidebar_position:1},v=void 0,N={unversionedId:"Basics/Vanilla/Vanilla",id:"Basics/Vanilla/Vanilla",title:"Vanilla",description:"Uni-radius",source:"@site/docs/Basics/Vanilla/Vanilla.mdx",sourceDirName:"Basics/Vanilla",slug:"/Basics/Vanilla/",permalink:"/brush-rendering-tutorial/Basics/Vanilla/",draft:!1,editUrl:"https://github.com/ShenCiao/brush-rendering-tutorial/tree/main/docs/Basics/Vanilla/Vanilla.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Basics",permalink:"/brush-rendering-tutorial/Basics/Basics/"},next:{title:"Tessellation",permalink:"/brush-rendering-tutorial/Tessellation/"}},w={},x=[{value:"Uni-radius",id:"uni-radius",level:2}],b={toc:x},y="wrapper";function L(e){let{components:t,...s}=e;return(0,r.kt)(y,(0,a.Z)({},b,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"uni-radius"},"Uni-radius"),(0,r.kt)("p",null,"Let's start with a solid stroke with a single radius value.\nLater add variable radius to it."),(0,r.kt)(f,{mdxType:"VanillaStroke"}),(0,r.kt)("p",null,"We are given a set of vertices forming a polyline, randomly select an edge with two consecutive vertices,\nlabeled as ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"v"),(0,r.kt)("mi",{parentName:"msub"},"i"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"v_i")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.5806em",verticalAlign:"-0.15em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"v"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3117em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"-0.0359em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"}))))))))))," and ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"v"),(0,r.kt)("mrow",{parentName:"msub"},(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mo",{parentName:"mrow"},"+"),(0,r.kt)("mn",{parentName:"mrow"},"1")))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"v_{i+1}")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6389em",verticalAlign:"-0.2083em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"v"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3117em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"-0.0359em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,r.kt)("span",{parentName:"span",className:"mbin mtight"},"+"),(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.2083em"}},(0,r.kt)("span",{parentName:"span"}))))))))))," and displayed in the diagram below.\nThen render a solid capsule on it shown on the left.\nIf we render every single edge like this, edges connect to each other naturally, as shown on the right."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},(0,r.kt)("img",{alt:"edge",src:n(3218).Z,width:"2560",height:"1080"})),(0,r.kt)("th",{parentName:"tr",align:"center"},(0,r.kt)("img",{alt:"edge",src:n(9948).Z,width:"2560",height:"1080"})))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("em",{parentName:"td"},"An edge")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("em",{parentName:"td"},"Connected edges"))))),(0,r.kt)("p",null,"It sounds deadly simple, right?\nThe process quite looks like drawing an ",(0,r.kt)("a",{parentName:"p",href:"https://www.google.com/search?q=articulated+arm+2D+diagram&tbm=isch"},"articulated arm"),".\nSo we just call it ",(0,r.kt)("em",{parentName:"p"},"Articulated")," stroke (Line) rendering."),(0,r.kt)("p",null,"To draw the capsule, we place four new vertices to form a rectangle."))}L.isMDXComponent=!0},9948:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/uni-connect-154f70dedb0fdc2925c947b72c9b5e63.png"},3218:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/uni-edge-2431a7ac5ef2ad09ed6f95c0bdc851cc.png"}}]);